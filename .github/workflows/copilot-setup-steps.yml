name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Configure Python environment
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Verify bluetooth_sig submodule
        run: |
          test -f "bluetooth_sig/assigned_numbers/uuids/service_uuids.yaml" || exit 1

      - name: Verify core functionality
        run: |
          python -c "import ble_gatt_device"
          python -c "from ble_gatt_device.gatt.uuid_registry import UuidRegistry; UuidRegistry()"
          python -c "from ble_gatt_device.gatt.services import GattServiceRegistry; print(f'Services: {len(GattServiceRegistry._services)}')"
          python -c "from ble_gatt_device.gatt.characteristics import CharacteristicRegistry; print(f'Characteristics: {len(CharacteristicRegistry._characteristics)}')"

