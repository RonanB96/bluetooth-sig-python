name: Lint and Code Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    name: 'Format Check'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: 'Set up Python 3.12'
      uses: actions/setup-python@v6
      with:
        python-version: "3.12"
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: 'Cache system dependencies'
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-lint-${{ hashFiles('scripts/install-deps.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-lint-

    - name: 'Install system dependencies'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build pkg-config libdbus-1-dev libglib2.0-dev libudev-dev python3-dev

    - name: 'Install Python dependencies'
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev,test,examples]

    - name: 'Check Code Formatting'
      run: ./scripts/format.sh --check

  lint:
    name: 'Lint Check'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: 'Set up Python 3.12'
      uses: actions/setup-python@v6
      with:
        python-version: "3.12"
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: 'Cache system dependencies'
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-lint-${{ hashFiles('scripts/install-deps.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-lint-

    - name: 'Install system dependencies'
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: 'Install Python dependencies'
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test,examples]"

    - name: 'Run Linting Checks'
      run: ./scripts/lint.sh --all
